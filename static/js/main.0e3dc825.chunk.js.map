{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/FeedBackOptions/FeedBackOptions.styled.js","components/FeedBackOptions/FeedBackOptions.jsx","components/App.js","index.js"],"names":["Title","styled","h3","Section","title","children","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Buttons","button","FeedbackOptions","options","updateState","map","option","type","onClick","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","setState","prevState","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSACaA,EAAQC,IAAOC,GAAV,+G,OCEZC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,cAACL,EAAD,UAAQI,IACPC,MAKPF,EAAQG,aAAe,CACrBD,SAAU,MAQGF,I,EAAAA,ICCAI,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,SCEdC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACd,EAAD,UAAQc,KCFJC,EAAUd,IAAOe,OAAV,qPCCL,SAASC,EAAT,GAAoD,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YACjD,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,cAACN,EAAD,CAASO,KAAK,SAAsBC,QAAS,kBAAMJ,EAAYE,IAA/D,SACGA,GADyBA,M,ICEXG,E,4MACnBC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPgB,mBAAqB,WACnB,MAA+B,EAAKD,MACpC,OADA,EAAQjB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBiB,gCAAkC,WAChC,IAAQnB,EAAS,EAAKiB,MAAdjB,KACR,MAAM,GAAN,OAAUoB,KAAKC,MAAOrB,EAAO,EAAKkB,qBAAwB,KAA1D,M,EAGFP,YAAc,SAAAE,GACZ,EAAKS,UAAS,SAAAC,GACZ,OAAO,eAAGV,EAASU,EAAUV,GAAU,O,4CAI3C,WACE,MAA+BW,KAAKP,MAA5BjB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBQ,EAAUe,OAAOC,KAAKF,KAAKP,OAEjC,OACE,gCACE,cAAC,EAAD,CAASrB,MAAM,wBAAf,SACE,cAACa,EAAD,CAAiBC,QAASA,EAASC,YAAaa,KAAKb,gBAGvD,cAAC,EAAD,CAASf,MAAM,aAAf,SACG4B,KAAKN,qBACJ,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,KAAKN,qBACZd,mBAAoBoB,KAAKL,oCAG3B,cAAC,EAAD,CAAcb,QAAQ,+B,GA3CDqB,aCFjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0e3dc825.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nexport const Title = styled.h3`\n  font-size: 16px;\n\n  color: green;\n  font-weight: bold;\n  margin-left: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <Title>{title}</Title>\n      {children}\n    </div>\n  );\n};\n\nSection.defaultProps = {\n  children: null,\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n\nexport default Section;\n","import PropTypes from 'prop-types'; // shortcut: impt\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}</p>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport { Title } from '../Section/Section.styled';\n\nconst Notification = ({ message }) => {\n  return <Title>{message}</Title>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from '@emotion/styled';\n\nexport const Buttons = styled.button`\n  padding: 10px;\n  margin-left: 15px;\n  background-color: green;\n  font-size: 16px;\n  border-radius: 15px;\n  color: white;\n  font-weight: bold;\n  &:hover {\n    color: grey;\n    background-color: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Buttons } from './FeedBackOptions.styled';\n\nexport default function FeedbackOptions({ options, updateState }) {\n  return options.map(option => (\n    <Buttons type=\"button\" key={option} onClick={() => updateState(option)}>\n      {option}\n    </Buttons>\n  ));\n}\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  updateState: PropTypes.func,\n};\n","import { Component } from 'react';\nimport './App.css';\nimport Section from './Section/Section.jsx';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\nimport FeedbackOptions from './FeedBackOptions/FeedBackOptions';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return `${Math.floor((good / this.countTotalFeedback()) * 100)}%`;\n  };\n\n  updateState = option => {\n    this.setState(prevState => {\n      return { [option]: prevState[option] + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={options} updateState={this.updateState} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}